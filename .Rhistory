library(dplyr)
library(sf)
library(sfdep)
library(sp)
library(spdep)
library(readr)
install.packages('readr')
install.packages('vroom')
data_municipalities <- read_csv("_data/data_municipalities.csv")
install.packages(c("Rcpp", "readr"))
install.packages(c("Rcpp", "readr"))
data_municipalities <- read.csv("_data/data_municipalities.csv")
map_municipalities <- st_read("_data/shapefile/map_municipalities.shp")
library(sf)
map_municipalities <- st_read("_data/shapefile/map_municipalities.shp")
library(dplyr)
library(sf)
library(sfdep)
library(sp)
library(spdep)
library(ggplot2)
library(ggthemes)
data_municipalities <- read.csv("_data/data_municipalities.csv")
map_municipalities <- st_read("_data/shapefile/map_municipalities.shp")
plot(st_geometry(map_municipalities))
which(!map_municipalities$mncplty_c %in% data_municipalities$municipality_code)
which(!data_municipalities$municipality_code %in% map_municipalities$mncplty_c )
View(data_municipalities)
map_municipalities_with_data <-
map_municipalities %>%
left_join(data_municipalities,
by = join_by(mncplty_c == municipality_code))
library(dplyr)
map_municipalities_with_data <-
map_municipalities %>%
left_join(data_municipalities,
by = join_by(mncplty_c == municipality_code))
map_municipalities_with_data <-
map_municipalities %>%
left_join(data_municipalities,
by = c(mncplty_c == municipality_code))
View(map_municipalities)
map_municipalities_with_data <-
map_municipalities %>%
left_join(data_municipalities,
by = c(mncplty_c = municipality_code))
map_municipalities_with_data <-
map_municipalities %>%
left_join(data_municipalities,
by = c(municipality_code = mncplty_c))
map_municipalities_with_data <-
map_municipalities %>%
left_join(data_municipalities,
by = c('municipality_code' = 'mncplty_c'))
View(data_municipalities)
map_municipalities_with_data
map_municipalities
map_municipalities_with_data <-
map_municipalities %>%
left_join(data_municipalities,
by = c('mncplty_c' = 'municipality_code'))
View(data_municipalities)
View(map_municipalities)
str(map_municipalities)
str(data_municipalities)
# lets add the data to the map object
data_municipalities$municipality_code <- as.character(data_municipalities$code)
as.character(data_municipalities$code)
library(dplyr)
library(sf)
library(sfdep)
library(sp)
library(spdep)
library(ggplot2)
library(ggthemes)
data_municipalities <- read.csv("_data/data_municipalities.csv")
map_municipalities <- st_read("_data/shapefile/map_municipalities.shp")
plot(st_geometry(map_municipalities))
# lets add the data to the map object
data_municipalities$municipality_code <- as.character(data_municipalities$municipality_code)
map_municipalities_with_data <-
map_municipalities %>%
left_join(data_municipalities,
by = c('mncplty_c' = 'municipality_code'))
View(map_municipalities_with_data)
View(map_municipalities)
View(data_municipalities)
map_municipalities_with_data <-
map_municipalities %>%
left_join(data_municipalities,
by = c('mncplty_n' = 'municipality_name'))
View(map_municipalities_with_data)
View(data_municipalities)
View(map_municipalities)
library(dplyr)
library(sf)
library(sfdep)
library(sp)
library(spdep)
library(ggplot2)
library(ggthemes)
data_municipalities <- read.csv("_data/data_municipalities.csv")
map_municipalities <- st_read("_data/shapefile/map_municipalities.shp")
plot(st_geometry(map_municipalities))
which(!map_municipalities$mncplty_c %in% data_municipalities$municipality_code)
which(!data_municipalities$municipality_code %in% map_municipalities$mncplty_c )
which(!map_municipalities$mncplty_c %in% data_municipalities$municipality_code)
which(!data_municipalities$municipality_code %in% map_municipalities$mncplty_c)
View(map_municipalities)
View(map_municipalities_with_data)
View(map_municipalities)
which(!map_municipalities$mncplty_c %in% data_municipalities$mncplty_c)
which(!data_municipalities$mncplty_c %in% map_municipalities$mncplty_c)
which(!map_municipalities$mncplty_c %in% data_municipalities$mncplty_c)
View(data_municipalities)
View(map_municipalities)
library(dplyr)
library(stringr)
library(sf)
library(sfdep)
library(sp)
library(spdep)
library(ggplot2)
library(ggthemes)
# import data for municipalities
data_municipalities <- read.csv("_data/data_municipalities.csv")
# import a shapefile for municipalities
map_municipalities <- st_read("_data/shapefile/map_municipalities.shp")
# plot the borders of municipalities
plot(st_geometry(map_municipalities))
# check if municipality codes in the datafile and the map are the same
which(!map_municipalities$mncplty_c %in% data_municipalities$mncplty_c)
which(!data_municipalities$mncplty_c %in% map_municipalities$mncplty_c)
# 0 is added to some municipality codes
map_municipalities$mncplty_c <- str_remove(map_municipalities$mncplty_c, "^0")
which(!map_municipalities$mncplty_c %in% data_municipalities$mncplty_c)
which(!data_municipalities$mncplty_c %in% map_municipalities$mncplty_c)
View(map_municipalities)
View(data_municipalities)
library(dplyr)
library(stringr)
library(sf)
library(sfdep)
library(sp)
library(spdep)
library(ggplot2)
library(ggthemes)
data_municipalities <- read.csv("_data/data_municipalities.csv")
# import a shapefile for municipalities
map_municipalities <- st_read("_data/shapefile/map_municipalities.shp")
which(!map_municipalities$mncplty_c %in% data_municipalities$mncplty_c)
which(!data_municipalities$mncplty_c %in% map_municipalities$mncplty_c)
str_remove(map_municipalities$mncplty_c, "^0")
map_municipalities$mncplty_c <- str_remove(map_municipalities$mncplty_c, "^0")
data_municipalities$municipality_code <- as.character(data_municipalities$municipality_code)
View(data_municipalities)
View(map_municipalities)
which(!map_municipalities$mncplty_c %in% data_municipalities$mncplty_c)
which(!data_municipalities$mncplty_c %in% map_municipalities$mncplty_c)
map_municipalities_with_data <-
map_municipalities %>%
left_join(data_municipalities,
by = c('mncplty_n' = 'municipality_name'))
View(map_municipalities_with_data)
map_municipalities_with_data <-
map_municipalities %>%
left_join(data_municipalities,
by = c('mncplty_c' = 'municipality_code'))
View(map_municipalities_with_data)
View(map_municipalities_with_data)
View(map_municipalities)
View(map_municipalities_with_data)
View(map_municipalities)
View(map_municipalities[[3]][[1]])
View(map_municipalities_with_data[[51]][[1]])
View(map_municipalities_with_data)
View(map_municipalities)
View(map_municipalities_with_data[[51]][[1]])
map_municipalities_with_data[[51]][[1]]
View(map_municipalities_with_data)
View(map_municipalities_with_data[[51]][[1]])
library(dplyr)
library(stringr)
library(sf)
library(sfdep)
library(sp)
library(spdep)
library(ggplot2)
library(ggthemes)
# import data for municipalities
data_municipalities <- read.csv("_data/data_municipalities.csv")
# import a shapefile for municipalities
map_municipalities <- st_read("_data/shapefile/map_municipalities.shp")
# plot the borders of municipalities
plot(st_geometry(map_municipalities))
# check if municipality codes in the datafile and the map are the same
which(!map_municipalities$mncplty_c %in% data_municipalities$mncplty_c)
which(!data_municipalities$mncplty_c %in% map_municipalities$mncplty_c)
# 0 is added to some municipality codes
map_municipalities$mncplty_c <- str_remove(map_municipalities$mncplty_c, "^0")
data_municipalities$municipality_code <- as.character(data_municipalities$municipality_code)
# again, check if municipality codes in the datafile and the map are the same
which(!map_municipalities$mncplty_c %in% data_municipalities$mncplty_c)
which(!data_municipalities$mncplty_c %in% map_municipalities$mncplty_c)
# lets add the data to the map object
map_municipalities_with_data <-
map_municipalities %>%
left_join(data_municipalities,
by = c('mncplty_c' = 'municipality_code'))
View(map_municipalities_with_data)
View(map_municipalities_with_data[[51]][[1]])
View(map_municipalities)
map_municipalities_with_data[[51]][[1]]
View(map_municipalities)
View(map_municipalities[[3]][[1]])
map_municipalities[[3]][[1]][[1]]
map_municipalities[[3]][[1]]
map_municipalities_with_data <-
map_municipalities %>%
left_join(data_municipalities,
join_by = c('mncplty_c' = 'municipality_code'))
# lets add the data to the map object
map_municipalities_with_data <-
map_municipalities %>%
left_join(data_municipalities,
by = c('mncplty_c' = 'municipality_code'))
View(map_municipalities_with_data)
map_municipalities_with_data <-
map_municipalities %>%
left_join(data_municipalities[,c('municipality_code', 'vaccination_rate')],
by = c('mncplty_c' = 'municipality_code'))
library(dplyr)
library(stringr)
library(sf)
library(sfdep)
library(sp)
library(spdep)
library(ggplot2)
library(ggthemes)
# import data for municipalities
data_municipalities <- read.csv("_data/data_municipalities.csv")
# import a shapefile for municipalities
map_municipalities <- st_read("_data/shapefile/map_municipalities.shp")
# plot the borders of municipalities
plot(st_geometry(map_municipalities))
# check if municipality codes in the datafile and the map are the same
which(!map_municipalities$mncplty_c %in% data_municipalities$mncplty_c)
which(!data_municipalities$mncplty_c %in% map_municipalities$mncplty_c)
# 0 is added to some municipality codes
map_municipalities$mncplty_c <- str_remove(map_municipalities$mncplty_c, "^0")
data_municipalities$municipality_code <- as.character(data_municipalities$municipality_code)
# again, check if municipality codes in the datafile and the map are the same
which(!map_municipalities$mncplty_c %in% data_municipalities$mncplty_c)
which(!data_municipalities$mncplty_c %in% map_municipalities$mncplty_c)
data_municipalities[,c('municipality_code', 'percent_vaccinated')]
map_municipalities_with_data <-
map_municipalities %>%
left_join(data_municipalities[,c('municipality_code', 'percent_vaccinated')],
by = c('mncplty_c' = 'municipality_code'))
View(map_municipalities_with_data)
ggplot(map_municipalities_with_data,
aes(fill = percent_vaccinated)) +
geom_sf() +
ggthemes::theme_map() +
scale_fill_continuous()
map_partitions <- st_read("_data/shapefile/map_partitions.shp")
ggplot() +
geom_sf(data = map_partitions,
aes(fill = partition)) +
ggthemes::theme_map()
ggplot() +
geom_sf(data = map_municipalities_with_data,
aes(fill = percent_vaccinated)) +
ggthemes::theme_map() +
scale_fill_continuous() +
geom_sf(data = map_partitions,
size = 2,
color = "red",
fill = NA)
#---------------------------------------------------------------
# creating spatial weight matrix - contiguity (i.e. common border)
municipalities_neighbours <- sfdep::st_contiguity(map_municipalities)
# lets check its structure
glimpse(municipalities_neighbours)
# converting a list of neighbours into a matrix
spatial_weights <- nb2mat(municipalities_neighbours)
# you can check if it is row standardized by default
summary(rowSums(spatial_weights))
map_municipalities_with_data$splag_percent_vaccinated <-
spatial_weights %*% as.matrix(map_municipalities_with_data$percent_vaccinated)
View(map_municipalities_with_data)
View(map_partitions)
View(map_partitions[[2]][[1]])
View(map_partitions)
municipalities_with_border <- st_join(map_municipalities, map_partitions)
View(municipalities_with_border)
library(dplyr)
library(stringr)
library(sf)
library(sfdep)
library(sp)
library(spdep)
library(ggplot2)
library(ggthemes)
data_municipalities <- read.csv("_data/data_municipalities.csv")
# Import a shapefile for municipalities
map_municipalities <- st_read("_data/shapefile/map_municipalities.shp")
# Plot the borders of municipalities
plot(st_geometry(map_municipalities))
# Check if municipality codes in the datafile and the map are the same
which(!map_municipalities$mncplty_c %in% data_municipalities$mncplty_c)
which(!data_municipalities$mncplty_c %in% map_municipalities$mncplty_c)
# "0" is added to some municipality codes, so I need to remove it
map_municipalities$mncplty_c <- str_remove(map_municipalities$mncplty_c, "^0")
data_municipalities$municipality_code <- as.character(data_municipalities$municipality_code)
# Again, check if municipality codes in the datafile and the map are the same
which(!map_municipalities$mncplty_c %in% data_municipalities$mncplty_c)
which(!data_municipalities$mncplty_c %in% map_municipalities$mncplty_c)
# Add the data to the map object
map_municipalities_with_data <-
map_municipalities %>%
left_join(data_municipalities[,c('municipality_code', 'percent_vaccinated')],
by = c('mncplty_c' = 'municipality_code'))
# Visualization for a selected variable -- e.g. percent_vaccinated
ggplot(map_municipalities_with_data,
aes(fill = percent_vaccinated)) +
geom_sf() +
ggthemes::theme_map() +
scale_fill_continuous()
# Create spatial weight matrix - contiguity (i.e. common border)
municipalities_neighbours <- sfdep::st_contiguity(map_municipalities)
# Check its structure
glimpse(municipalities_neighbours)
# Converting a list of neighbours into a matrix
spatial_weights <- nb2mat(municipalities_neighbours)
# Check if it is row standardized by default
summary(rowSums(spatial_weights))
# Based on that we can create a variable which is a spatial lag of
# percent vaccinated (i.e. average value based on the neighbours of
# each municipality)
map_municipalities_with_data$splag_percent_vaccinated <-
spatial_weights %*% as.matrix(map_municipalities_with_data$percent_vaccinated)
View(map_municipalities_with_data)
map_partitions <- st_read("_data/shapefile/map_partitions.shp")
# Plot historical borders between partitions
ggplot() +
geom_sf(data = map_partitions,
aes(fill = partition)) +
ggthemes::theme_map()
# Overlay the two maps
ggplot() +
geom_sf(data = map_municipalities_with_data,
aes(fill = percent_vaccinated)) +
ggthemes::theme_map() +
scale_fill_continuous() +
geom_sf(data = map_partitions,
size = 2,
color = "red",
fill = NA)
# Check if partitions can be added
municipalities_with_border <- st_join(map_municipalities, map_partitions)
View(municipalities_with_border)
View(map_municipalities_with_data)
View(map_municipalities_with_data)
spatial_weights %*% as.matrix(map_municipalities_with_data$percent_vaccinated)
as.vector(spatial_weights %*% as.matrix(map_municipalities_with_data$percent_vaccinated))
map_municipalities_with_data$splag_percent_vaccinated <-
as.vector(spatial_weights %*% as.matrix(map_municipalities_with_data$percent_vaccinated))
View(map_municipalities_with_data)
library(dplyr)
library(stringr)
library(sf)
library(sfdep)
library(sp)
library(spdep)
library(ggplot2)
library(ggthemes)
#---------------------------------------------------------------
# NEIGHBOURHOOD WEIGHTS
#---------------------------------------------------------------
# Import data for municipalities
data_municipalities <- read.csv("_data/data_municipalities.csv")
# Import a shapefile for municipalities
map_municipalities <- st_read("_data/shapefile/map_municipalities.shp")
# Plot the borders of municipalities
plot(st_geometry(map_municipalities))
# Check if municipality codes in the datafile and the map are the same
which(!map_municipalities$mncplty_c %in% data_municipalities$mncplty_c)
which(!data_municipalities$mncplty_c %in% map_municipalities$mncplty_c)
# "0" is added to some municipality codes, so I need to remove it
map_municipalities$mncplty_c <- str_remove(map_municipalities$mncplty_c, "^0")
data_municipalities$municipality_code <- as.character(data_municipalities$municipality_code)
# Again, check if municipality codes in the datafile and the map are the same
which(!map_municipalities$mncplty_c %in% data_municipalities$mncplty_c)
which(!data_municipalities$mncplty_c %in% map_municipalities$mncplty_c)
# Add the data to the map object
map_municipalities_with_data <-
map_municipalities %>%
left_join(data_municipalities[,c('municipality_code', 'percent_vaccinated')],
by = c('mncplty_c' = 'municipality_code'))
# Visualization for a selected variable -- e.g. percent_vaccinated
ggplot(map_municipalities_with_data,
aes(fill = percent_vaccinated)) +
geom_sf() +
ggthemes::theme_map() +
scale_fill_continuous()
# Create spatial weight matrix - contiguity (i.e. common border)
municipalities_neighbours <- sfdep::st_contiguity(map_municipalities)
# Check its structure
glimpse(municipalities_neighbours)
# Converting a list of neighbours into a matrix
spatial_weights <- nb2mat(municipalities_neighbours)
# Check if it is row standardized by default
summary(rowSums(spatial_weights))
# Based on that we can create a variable which is a spatial lag of
# percent vaccinated (i.e. average value based on the neighbours of
# each municipality)
map_municipalities_with_data$splag_percent_vaccinated <-
as.vector(spatial_weights %*% as.matrix(map_municipalities_with_data$percent_vaccinated))
map_partitions <- st_read("_data/shapefile/map_partitions.shp")
# Plot historical borders between partitions
ggplot() +
geom_sf(data = map_partitions,
aes(fill = partition)) +
ggthemes::theme_map()
# Overlay the two maps
ggplot() +
geom_sf(data = map_municipalities_with_data,
aes(fill = percent_vaccinated)) +
ggthemes::theme_map() +
scale_fill_continuous() +
geom_sf(data = map_partitions,
size = 2,
color = "red",
fill = NA)
# Check if partitions can be added
municipalities_with_border <- st_join(map_municipalities, map_partitions)
View(map_municipalities_with_data)
View(municipalities_with_border)
all_data <-
map_municipalities_with_data %>%
select(mncplty_c, mncplty_n, splag_percent_vaccinated)
left_join(municipalities_with_border[,c('mncplty_c', 'partition')],
by = c('mncplty_c' = 'municipality_code'))
all_data <-
map_municipalities_with_data %>%
select(mncplty_c, mncplty_n, splag_percent_vaccinated)
left_join(municipalities_with_border[,c('mncplty_c', 'partition')],
by = c('mncplty_c'))
all_data <-
map_municipalities_with_data %>%
select(mncplty_c, mncplty_n, splag_percent_vaccinated)
View(all_data)
View(all_data)
View(all_data)
View(map_municipalities_with_data)
all_data <-
map_municipalities_with_data %>%
select(-geometry)
all_data <-
map_municipalities_with_data %>%
select(mncplty_c, mncplty_n, splag_percent_vaccinated)
View(all_data)
all_data <-
map_municipalities_with_data[,c('mncplty_c', 'mncplty_n', 'splag_percent_vaccinated')]
View(all_data)
all_data <-
map_municipalities_with_data[,c('mncplty_c', 'mncplty_n', 'splag_percent_vaccinated')] %>%
left_join(municipalities_with_border[,c('mncplty_c', 'partition')],
by = c('mncplty_c'))
View(municipalities_with_border)
map_municipalities_with_data <- as.data.frame(map_municipalities_with_data)
municipalities_with_border <- as.data.frame(municipalities_with_border)
View(map_municipalities_with_data)
map_municipalities_with_data[,c('mncplty_c', 'mncplty_n', 'splag_percent_vaccinated')]
all_data <-
map_municipalities_with_data[,c('mncplty_c', 'mncplty_n', 'splag_percent_vaccinated')] %>%
left_join(municipalities_with_border[,c('mncplty_c', 'partition')],
by = c('mncplty_c'))
View(all_data)
names(all_data)[names(all_data) == 'mncplty_c'] <- 'municipality_code'
names(all_data)[names(all_data) == 'mncplty_n'] <- 'municipality_name'
View(all_data)
write.csv(all_data, '_data/spatial_df', row.names=FALSE)
write.csv(all_data, '_data/spatial_data.csv', row.names=FALSE)
spatial_data <- read.csv('_data/spatial_data.csv')
View(spatial_data)
View(map_municipalities_with_data)
View(all_data)
